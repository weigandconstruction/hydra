defmodule <%= @module %>.<%= @local_module %> do
  @moduledoc """
  API for <%= @local_module %>
  """

  <%= for operation <- @path.operations do %>
    @doc """
    <%= operation.description %>
    """
    def <%= operation.method %>(<%= Hydra.Helpers.function_parameters(@path, operation) |> Enum.map_join(", ", & &1.internal_name) %>) do
      Procore.Client.request(
        method: :<%= operation.method %>,
        url: "<%= Hydra.Helpers.interpolated_path(@path.path) %>",

        <%= if !Enum.empty?(Hydra.Helpers.header_parameters(@path, operation)) do %>
          headers: [
          <%= for param <-  Hydra.Helpers.header_parameters(@path, operation) do %>
            {"<%= param.name %>", <%= param.internal_name %>},
          <% end %>
          ],
        <% end %>

        <%= if !Enum.empty?(Hydra.Helpers.query_parameters(@path, operation)) do %>
          params: [
          <%= for param <-  Hydra.Helpers.query_parameters(@path, operation) do %>
            "<%= param.name %>": <%= param.internal_name %>,
          <% end %>
          ],
        <% end %>
      )
    end
  <% end %>
end
